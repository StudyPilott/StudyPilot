workflows:
  react-native-app:
    name: React Native Android & iOS Build
    max_build_duration: 60
    environment:
      groups:
        - react-native
        # Example: Add your own API keys here
        # API_URL: $API_URL
      node: 20.11.1
      npm: 10.5.0
      xcode: latest
      java: 17
    scripts:
      - name: Install dependencies
        script: |
          npm install
      - name: Install iOS pods
        script: |
          cd ios
          pod install
          cd ..
      - name: Run tests (optional)
        script: |
          npm test -- --watchAll=false || true
      - name: Build Android APK
        script: |
          cd android
          ./gradlew assembleRelease
          cd ..
      - name: Build iOS (Simulator .app)
        script: |
          cd ios
          xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -configuration Release -sdk iphonesimulator -derivedDataPath build
          cd ..
      # To build .ipa for real devices, you need proper signing setup. Uncomment and configure below if needed:
      # - name: Build iOS .ipa (for App Store/TestFlight)
      #   script: |
      #     cd ios
      #     xcodebuild -workspace YourApp.xcworkspace -scheme YourApp -configuration Release -sdk iphoneos -archivePath $CM_BUILD_DIR/YourApp.xcarchive archive
      #     xcodebuild -exportArchive -archivePath $CM_BUILD_DIR/YourApp.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath $CM_BUILD_DIR/YourApp
      #     cd ..
    artifacts:
            - build/app/outputs/flutter-apk/app-release.apk
            - ios/build/Build/Products/Release-iphonesimulator/*.app
      # - $CM_BUILD_DIR/YourApp/*.ipa # Uncomment if exporting .ipa above

    publishing:
      email:
        recipients:
          - iamsmarajit@outlook.com
        notify:
          success: true
          failure: true

# Setup notes:
# 1. Place this file at the root of your project as codemagic.yaml
# 2. In the Codemagic UI, set up any needed environment variables & groups.
# 3. Replace YourApp with your actual Xcode workspace/scheme names.
# 4. You may need to adjust for Expo or EAS builds if using Expo.
# 5. iOS .ipa export requires Apple Developer credentials and signing config.
